<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
	</bean>
	<!-- jedis客户端单机版 -->
	<bean id="redisClient" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="${jedis.host}" />
		<constructor-arg name="port" value="${jedis.port}" />
		<constructor-arg name="timeout" value="${jedis.timeout}" />
		<!-- <constructor-arg name="password" value="${jedis.pwd}" /> -->
		<constructor-arg name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<bean id="jedisClient" class="com.sword.smvcm.service.JedisClientSingleImpl" />
	<!-- jedis集群版配置 <bean id="redisClient" class="redis.clients.jedis.JedisCluster"> 
		<constructor-arg name="nodes"> <set> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7001"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7002"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7003"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7004"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7005"></constructor-arg> </bean> <bean class="redis.clients.jedis.HostAndPort"> 
		<constructor-arg name="host" value="192.168.25.153"></constructor-arg> <constructor-arg 
		name="port" value="7006"></constructor-arg> </bean> </set> </constructor-arg> 
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg> 
		</bean> <bean id="jedisClientCluster" class="com.goshop.redis.service.JedisClientClusterImpl"></bean> -->
</beans>
