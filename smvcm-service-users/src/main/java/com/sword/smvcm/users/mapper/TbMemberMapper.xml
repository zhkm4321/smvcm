<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sword.smvcm.users.mapper.TbMemberMapper">
  <resultMap id="BaseResultMap" type="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="ww" jdbcType="VARCHAR" property="ww" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="qqopenid" jdbcType="VARCHAR" property="qqopenid" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="available_predeposit" jdbcType="DECIMAL" property="availablePredeposit" />
    <result column="freeze_predeposit" jdbcType="DECIMAL" property="freezePredeposit" />
    <result column="inform_allow" jdbcType="BIT" property="informAllow" />
    <result column="is_buy" jdbcType="BIT" property="isBuy" />
    <result column="is_allowtalk" jdbcType="BIT" property="isAllowtalk" />
    <result column="is_vip" jdbcType="BIT" property="isVip" />
    <result column="area_d" jdbcType="INTEGER" property="areaD" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="areainfo" jdbcType="VARCHAR" property="areainfo" />
    <result column="privacy" jdbcType="VARCHAR" property="privacy" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="expires_in" jdbcType="INTEGER" property="expiresIn" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="qqinfo" jdbcType="LONGVARCHAR" property="qqinfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, union_id, open_id, realname, avatar, sex, birthday, email, qq, ww, time, 
    qqopenid, points, available_predeposit, freeze_predeposit, inform_allow, is_buy, 
    is_allowtalk, is_vip, area_d, city_id, province_id, areainfo, privacy, access_token, 
    expires_in, refresh_token, scope
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    qqinfo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sword.smvcm.users.pojo.TbMemberExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sword.smvcm.users.pojo.TbMemberExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_user_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sword.smvcm.users.pojo.TbMemberExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user_member (user_id, union_id, open_id, 
      realname, avatar, sex, 
      birthday, email, qq, ww, 
      time, qqopenid, points, 
      available_predeposit, freeze_predeposit, 
      inform_allow, is_buy, is_allowtalk, 
      is_vip, area_d, city_id, province_id, 
      areainfo, privacy, access_token, 
      expires_in, refresh_token, scope, 
      qqinfo)
    values (#{userId,jdbcType=INTEGER}, #{unionId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, 
      #{birthday,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{ww,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{qqopenid,jdbcType=VARCHAR}, #{points,jdbcType=INTEGER}, 
      #{availablePredeposit,jdbcType=DECIMAL}, #{freezePredeposit,jdbcType=DECIMAL}, 
      #{informAllow,jdbcType=BIT}, #{isBuy,jdbcType=BIT}, #{isAllowtalk,jdbcType=BIT}, 
      #{isVip,jdbcType=BIT}, #{areaD,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{provinceId,jdbcType=INTEGER}, 
      #{areainfo,jdbcType=VARCHAR}, #{privacy,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, 
      #{expiresIn,jdbcType=INTEGER}, #{refreshToken,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, 
      #{qqinfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_user_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="ww != null">
        ww,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="qqopenid != null">
        qqopenid,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="availablePredeposit != null">
        available_predeposit,
      </if>
      <if test="freezePredeposit != null">
        freeze_predeposit,
      </if>
      <if test="informAllow != null">
        inform_allow,
      </if>
      <if test="isBuy != null">
        is_buy,
      </if>
      <if test="isAllowtalk != null">
        is_allowtalk,
      </if>
      <if test="isVip != null">
        is_vip,
      </if>
      <if test="areaD != null">
        area_d,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="areainfo != null">
        areainfo,
      </if>
      <if test="privacy != null">
        privacy,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="expiresIn != null">
        expires_in,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="scope != null">
        scope,
      </if>
      <if test="qqinfo != null">
        qqinfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="ww != null">
        #{ww,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="qqopenid != null">
        #{qqopenid,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="availablePredeposit != null">
        #{availablePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="freezePredeposit != null">
        #{freezePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="informAllow != null">
        #{informAllow,jdbcType=BIT},
      </if>
      <if test="isBuy != null">
        #{isBuy,jdbcType=BIT},
      </if>
      <if test="isAllowtalk != null">
        #{isAllowtalk,jdbcType=BIT},
      </if>
      <if test="isVip != null">
        #{isVip,jdbcType=BIT},
      </if>
      <if test="areaD != null">
        #{areaD,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="areainfo != null">
        #{areainfo,jdbcType=VARCHAR},
      </if>
      <if test="privacy != null">
        #{privacy,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null">
        #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="qqinfo != null">
        #{qqinfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.ww != null">
        ww = #{record.ww,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qqopenid != null">
        qqopenid = #{record.qqopenid,jdbcType=VARCHAR},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.availablePredeposit != null">
        available_predeposit = #{record.availablePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.freezePredeposit != null">
        freeze_predeposit = #{record.freezePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.informAllow != null">
        inform_allow = #{record.informAllow,jdbcType=BIT},
      </if>
      <if test="record.isBuy != null">
        is_buy = #{record.isBuy,jdbcType=BIT},
      </if>
      <if test="record.isAllowtalk != null">
        is_allowtalk = #{record.isAllowtalk,jdbcType=BIT},
      </if>
      <if test="record.isVip != null">
        is_vip = #{record.isVip,jdbcType=BIT},
      </if>
      <if test="record.areaD != null">
        area_d = #{record.areaD,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.areainfo != null">
        areainfo = #{record.areainfo,jdbcType=VARCHAR},
      </if>
      <if test="record.privacy != null">
        privacy = #{record.privacy,jdbcType=VARCHAR},
      </if>
      <if test="record.accessToken != null">
        access_token = #{record.accessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.expiresIn != null">
        expires_in = #{record.expiresIn,jdbcType=INTEGER},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.scope != null">
        scope = #{record.scope,jdbcType=VARCHAR},
      </if>
      <if test="record.qqinfo != null">
        qqinfo = #{record.qqinfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      union_id = #{record.unionId,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=DATE},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      ww = #{record.ww,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      qqopenid = #{record.qqopenid,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER},
      available_predeposit = #{record.availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{record.freezePredeposit,jdbcType=DECIMAL},
      inform_allow = #{record.informAllow,jdbcType=BIT},
      is_buy = #{record.isBuy,jdbcType=BIT},
      is_allowtalk = #{record.isAllowtalk,jdbcType=BIT},
      is_vip = #{record.isVip,jdbcType=BIT},
      area_d = #{record.areaD,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      areainfo = #{record.areainfo,jdbcType=VARCHAR},
      privacy = #{record.privacy,jdbcType=VARCHAR},
      access_token = #{record.accessToken,jdbcType=VARCHAR},
      expires_in = #{record.expiresIn,jdbcType=INTEGER},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      scope = #{record.scope,jdbcType=VARCHAR},
      qqinfo = #{record.qqinfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      union_id = #{record.unionId,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=DATE},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      ww = #{record.ww,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      qqopenid = #{record.qqopenid,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER},
      available_predeposit = #{record.availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{record.freezePredeposit,jdbcType=DECIMAL},
      inform_allow = #{record.informAllow,jdbcType=BIT},
      is_buy = #{record.isBuy,jdbcType=BIT},
      is_allowtalk = #{record.isAllowtalk,jdbcType=BIT},
      is_vip = #{record.isVip,jdbcType=BIT},
      area_d = #{record.areaD,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      areainfo = #{record.areainfo,jdbcType=VARCHAR},
      privacy = #{record.privacy,jdbcType=VARCHAR},
      access_token = #{record.accessToken,jdbcType=VARCHAR},
      expires_in = #{record.expiresIn,jdbcType=INTEGER},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      scope = #{record.scope,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="ww != null">
        ww = #{ww,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="qqopenid != null">
        qqopenid = #{qqopenid,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="availablePredeposit != null">
        available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="freezePredeposit != null">
        freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
      </if>
      <if test="informAllow != null">
        inform_allow = #{informAllow,jdbcType=BIT},
      </if>
      <if test="isBuy != null">
        is_buy = #{isBuy,jdbcType=BIT},
      </if>
      <if test="isAllowtalk != null">
        is_allowtalk = #{isAllowtalk,jdbcType=BIT},
      </if>
      <if test="isVip != null">
        is_vip = #{isVip,jdbcType=BIT},
      </if>
      <if test="areaD != null">
        area_d = #{areaD,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="areainfo != null">
        areainfo = #{areainfo,jdbcType=VARCHAR},
      </if>
      <if test="privacy != null">
        privacy = #{privacy,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresIn != null">
        expires_in = #{expiresIn,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="qqinfo != null">
        qqinfo = #{qqinfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    set user_id = #{userId,jdbcType=INTEGER},
      union_id = #{unionId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      ww = #{ww,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      qqopenid = #{qqopenid,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER},
      available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
      inform_allow = #{informAllow,jdbcType=BIT},
      is_buy = #{isBuy,jdbcType=BIT},
      is_allowtalk = #{isAllowtalk,jdbcType=BIT},
      is_vip = #{isVip,jdbcType=BIT},
      area_d = #{areaD,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      areainfo = #{areainfo,jdbcType=VARCHAR},
      privacy = #{privacy,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      qqinfo = #{qqinfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sword.smvcm.users.pojo.TbMember">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_member
    set user_id = #{userId,jdbcType=INTEGER},
      union_id = #{unionId,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      ww = #{ww,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      qqopenid = #{qqopenid,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER},
      available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
      inform_allow = #{informAllow,jdbcType=BIT},
      is_buy = #{isBuy,jdbcType=BIT},
      is_allowtalk = #{isAllowtalk,jdbcType=BIT},
      is_vip = #{isVip,jdbcType=BIT},
      area_d = #{areaD,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      province_id = #{provinceId,jdbcType=INTEGER},
      areainfo = #{areainfo,jdbcType=VARCHAR},
      privacy = #{privacy,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR},
      expires_in = #{expiresIn,jdbcType=INTEGER},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>